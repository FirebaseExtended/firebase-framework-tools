extend type Collection {
  """
  ✨ Implicit foreign key field based on `Collection`.`featuredImage`. It must match the value of `ProductImage`.`id`. See `@ref` for how to customize it.
  """
  featuredImageId: UUID @fdc_generated(from: "Collection.featuredImage", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Collection`.`seo`. It must match the value of `SEO`.`id`. See `@ref` for how to customize it.
  """
  seoId: UUID @fdc_generated(from: "Collection.seo", purpose: IMPLICIT_REF_FIELD)
}
extend type Order {
  """
  ✨ Implicit foreign key field based on `Order`.`customer`. It must match the value of `Customer`.`id`. See `@ref` for how to customize it.
  """
  customerId: String! @fdc_generated(from: "Order.customer", purpose: IMPLICIT_REF_FIELD)
}
extend type OrderItem {
  """
  ✨ Implicit foreign key field based on `OrderItem`.`order`. It must match the value of `Order`.`id`. See `@ref` for how to customize it.
  """
  orderId: UUID! @fdc_generated(from: "OrderItem.order", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `OrderItem`.`product`. It must match the value of `Product`.`id`. See `@ref` for how to customize it.
  """
  productId: UUID! @fdc_generated(from: "OrderItem.product", purpose: IMPLICIT_REF_FIELD)
}
extend type Product {
  """
  ✨ Implicit foreign key field based on `Product`.`featuredImage`. It must match the value of `ProductImage`.`id`. See `@ref` for how to customize it.
  """
  featuredImageId: UUID @fdc_generated(from: "Product.featuredImage", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Product`.`seo`. It must match the value of `SEO`.`id`. See `@ref` for how to customize it.
  """
  seoId: UUID @fdc_generated(from: "Product.seo", purpose: IMPLICIT_REF_FIELD)
}
extend type ProductCollection {
  """
  ✨ Implicit foreign key field based on `ProductCollection`.`collection`. It must match the value of `Collection`.`id`. See `@ref` for how to customize it.
  """
  collectionId: UUID! @fdc_generated(from: "ProductCollection.collection", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `ProductCollection`.`product`. It must match the value of `Product`.`id`. See `@ref` for how to customize it.
  """
  productId: UUID! @fdc_generated(from: "ProductCollection.product", purpose: IMPLICIT_REF_FIELD)
}
extend type ProductImage {
  """
  ✨ Implicit foreign key field based on `ProductImage`.`product`. It must match the value of `Product`.`id`. See `@ref` for how to customize it.
  """
  productId: UUID! @fdc_generated(from: "ProductImage.product", purpose: IMPLICIT_REF_FIELD)
}
extend type ProductOption {
  """
  ✨ Implicit foreign key field based on `ProductOption`.`product`. It must match the value of `Product`.`id`. See `@ref` for how to customize it.
  """
  productId: UUID! @fdc_generated(from: "ProductOption.product", purpose: IMPLICIT_REF_FIELD)
}
extend type ProductReview {
  """
  ✨ Implicit foreign key field based on `ProductReview`.`product`. It must match the value of `Product`.`id`. See `@ref` for how to customize it.
  """
  productId: UUID! @fdc_generated(from: "ProductReview.product", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `ProductReview`.`customer`. It must match the value of `Customer`.`id`. See `@ref` for how to customize it.
  """
  customerId: String! @fdc_generated(from: "ProductReview.customer", purpose: IMPLICIT_REF_FIELD)
}
extend type ProductVariant {
  """
  ✨ Implicit foreign key field based on `ProductVariant`.`product`. It must match the value of `Product`.`id`. See `@ref` for how to customize it.
  """
  productId: UUID! @fdc_generated(from: "ProductVariant.product", purpose: IMPLICIT_REF_FIELD)
}
extend type SelectedOption {
  """
  ✨ Implicit foreign key field based on `SelectedOption`.`productVariant`. It must match the value of `ProductVariant`.`id`. See `@ref` for how to customize it.
  """
  productVariantId: UUID! @fdc_generated(from: "SelectedOption.productVariant", purpose: IMPLICIT_REF_FIELD)
}
